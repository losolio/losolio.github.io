{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/doc-navigation/index.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","m","module","exports","require","default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","React","createContext","PropTypes","object","string","isRequired","func","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","Header","_ref","props","siteTitle","color","dark","expand","href","outline","navbar","propTypes","defaultProps","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","reactstrap__WEBPACK_IMPORTED_MODULE_2__","DocNavigation","class","vertical","Layout","children","_public_static_d_856328897_json__WEBPACK_IMPORTED_MODULE_0__","data","react__WEBPACK_IMPORTED_MODULE_1___default","Fragment","_header__WEBPACK_IMPORTED_MODULE_3__","fluid","reactstrap__WEBPACK_IMPORTED_MODULE_7__","md","tag","className","_doc_navigation__WEBPACK_IMPORTED_MODULE_4__","node","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","arrayOf"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAaeQ,UARM,kBACnBJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KACEF,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,mBACXP,EAAAK,EAAAC,cAAA,uBACAN,EAAAK,EAAAC,cAAA,2FCTJ,IAAsBE,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAAT,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAc,EAAAjB,EAAA,IAAAkB,EAAAlB,EAAAK,EAAAY,GAAAjB,EAAA,IAAAA,EAAA,KAa2BmB,IAAMC,cAAc,IAuDvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,uCCvEtBzB,EAAA,SAAAiB,EAAAjB,EAAA,IAAAkB,EAAAlB,EAAAK,EAAAY,GAAAS,EAAA1B,EAAA,GAAA2B,EAAA3B,EAAAK,EAAAqB,GAAAE,EAAA5B,EAAA,KAAA6B,EAAA7B,EAAA,KAAA8B,EAAA9B,EAAA,KAAA+B,EAAA/B,EAAA,KAaMgC,EAAS,SAAAC,KAAGC,MAAH,IAAUC,EAAVF,EAAUE,UAAV,OACbR,EAAAlB,EAAAC,cAAA,WACAiB,EAAAlB,EAAAC,cAACkB,EAAA,EAAD,CAAQQ,MAAM,OAAOC,MAAI,EAACC,OAAO,MAC/BX,EAAAlB,EAAAC,cAACmB,EAAA,EAAD,CAAaU,KAAK,KAAKJ,GACvBR,EAAAlB,EAAAC,cAACoB,EAAA,EAAD,CAAQU,SAAO,EAACJ,MAAM,aAAtB,QAAgD,IAChDT,EAAAlB,EAAAC,cAACqB,EAAA,EAAD,CAAUU,QAAM,OAMpBT,EAAOU,UAAY,CACjBP,UAAWd,IAAUE,QAGvBS,EAAOW,aAAe,CACpBR,UAAS,IAGIH,kGC3BTY,EAAmB,SAAAX,GAAiC,IAA9BY,EAA8BZ,EAA9BY,SAAUC,EAAoBb,EAApBa,cACpC,OAAKA,EAGE3B,IAAMT,cAAcqC,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,MASXN,EAAiBF,UAAY,CAC3BG,SAAUxB,IAAU8B,MAAM,CACxBC,SAAU/B,IAAUE,OAAOC,aAC1BA,YAGUoB,8CCtBf,IAAAzC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAkD,GAAArD,EAAA,IAAAA,EAAA,MAAA4B,EAAA5B,EAAA,KAAA6B,EAAA7B,EAAA,KAiCesD,IA7BO,SAAApB,GACpB,OACE9B,EAAAK,EAAAC,cAAA,OAAK6C,MAAM,aACTnD,EAAAK,EAAAC,cAAA,wBACAN,EAAAK,EAAAC,cAAC2C,EAAA,EAAD,CAAKG,UAAQ,GACXpD,EAAAK,EAAAC,cAACkB,EAAA,EAAD,KACExB,EAAAK,EAAAC,cAACmB,EAAA,EAAD,CAASU,KAAK,WAAd,WAEFnC,EAAAK,EAAAC,cAACkB,EAAA,EAAD,KACExB,EAAAK,EAAAC,cAACmB,EAAA,EAAD,CAASU,KAAK,iBAAd,WAEFnC,EAAAK,EAAAC,cAACkB,EAAA,EAAD,KACExB,EAAAK,EAAAC,cAACmB,EAAA,EAAD,CAASU,KAAK,YAAd,aAIJnC,EAAAK,EAAAC,cAAA,UAAQ6C,MAAM,QAAd,OACAnD,EAAAK,EAAAC,cAAC2C,EAAA,EAAD,CAAKG,UAAQ,GACXpD,EAAAK,EAAAC,cAACkB,EAAA,EAAD,KACExB,EAAAK,EAAAC,cAACmB,EAAA,EAAD,CAASU,KAAK,sBAAd,kBAEFnC,EAAAK,EAAAC,cAACkB,EAAA,EAAD,KACExB,EAAAK,EAAAC,cAACmB,EAAA,EAAD,CAASU,KAAK,gBAAd,4ICVJkB,UAAS,SAAAxB,GAAkB,IAAfyB,EAAezB,EAAfyB,SACHC,EAAAC,KAUb,OACEC,EAAApD,EAAAC,cAAAmD,EAAApD,EAAAqD,SAAA,KACED,EAAApD,EAAAC,cAACqD,EAAA,EAAD,CAAQ5B,UAAU,qBAClB0B,EAAApD,EAAAC,cAACoB,EAAA,EAAD,CAAWkC,OAAK,GACdH,EAAApD,EAAAC,cAACqB,EAAA,EAAD,KACE8B,EAAApD,EAAAC,cAACuD,EAAA,EAAD,CAAKC,GAAG,IAAIC,IAAI,MAAMC,UAAU,sBAC9BP,EAAApD,EAAAC,cAAC2D,EAAA,EAAD,OAEFR,EAAApD,EAAAC,cAACuD,EAAA,EAAD,CAAKG,UAAU,QACbP,EAAApD,EAAAC,cAAA,YAAOgD,SAQnBD,EAAOf,UAAY,CACjBgB,SAAUrC,IAAUiD,KAAK9C,YAGZiC,2LCpCf,SAASc,EAATtC,GAAiD,IAAlCuC,EAAkCvC,EAAlCuC,YAAaC,EAAqBxC,EAArBwC,KAAMC,EAAezC,EAAfyC,KAAM/D,EAASsB,EAATtB,MAC9BgE,EADuCC,EAAAhB,KACvCe,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACEX,EAAApD,EAAAC,cAACqE,EAAAtE,EAAD,CACEuE,eAAgB,CACdP,QAEF9D,MAAOA,EACPsE,cAAa,QAAUN,EAAKG,aAAanE,MACzC+D,KAAM,CACJ,CACEQ,KAAI,cACJC,QAASN,GAEX,CACEO,SAAQ,WACRD,QAASxE,GAEX,CACEyE,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASR,EAAKG,aAAaO,QAE7B,CACEH,KAAI,gBACJC,QAASxE,GAEX,CACEuE,KAAI,sBACJC,QAASN,IAEXS,OAAOZ,KAKfH,EAAI5B,aAAe,CACjB8B,KAAI,KACJC,KAAM,GACNF,YAAW,IAGbD,EAAI7B,UAAY,CACd8B,YAAanD,IAAUE,OACvBkD,KAAMpD,IAAUE,OAChBmD,KAAMrD,IAAUkE,QAAQlE,IAAUC,QAClCX,MAAOU,IAAUE,OAAOC,YAGX+C","file":"component---src-pages-404-js-bdf8ea98d4ca6397959d.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport {\n  Button,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink} from 'reactstrap';\n\nconst Header = ({ props, siteTitle }) => (\n  <div>\n  <Navbar color=\"dark\" dark expand=\"md\">\n    <NavbarBrand href=\"/\">{siteTitle}</NavbarBrand>\n    <Button outline color=\"secondary\">Menu</Button>{' '}\n    <Collapse navbar>\n    </Collapse>\n  </Navbar>\n</div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport Link from \"gatsby-link\";\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\n\nconst DocNavigation = props => {\n  return (\n    <div class=\"pt-5 pl-3\">\n      <header>Docker</header>\n      <Nav vertical>\n        <NavItem>\n          <NavLink href=\"/docker\">Docker</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink href=\"/docker/mssql\">MS SQL</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink href=\"/toolbox\">Toolbox</NavLink>\n        </NavItem>\n      </Nav>\n\n      <header class=\"pt-5\">Web</header>\n      <Nav vertical>\n        <NavItem>\n          <NavLink href=\"/web/accessibility\">Accessibility</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink href=\"/web/flexbox\">Flexbox</NavLink>\n        </NavItem>\n      </Nav>\n    </div>\n  ) \n}\n\nexport default DocNavigation\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport Header from \"./header\";\nimport DocNavigation from \"./doc-navigation\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport \"../styles/main.scss\";\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <Header siteTitle=\"Learning to code\"  />\n      <Container fluid>\n        <Row>\n          <Col md=\"2\" tag=\"nav\" className=\"sidebar-navigation\">\n            <DocNavigation />\n          </Col>\n          <Col className=\"pt-5\">\n            <main>{children}</main>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}